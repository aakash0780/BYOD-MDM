version: '3.8'

services:
  # PostgreSQL Database for Headwind MDM
  postgres:
    image: postgres:13
    container_name: hmdm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${SQL_BASE:-hmdm}
      POSTGRES_USER: ${SQL_USER:-hmdm}
      POSTGRES_PASSWORD: ${SQL_PASS:-topsecret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hmdm-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_USER:-hmdm}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Headwind MDM Web Panel
  hmdm:
    image: headwindmdm/hmdm:0.1.5
    container_name: hmdm-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      SQL_HOST: postgres
      SQL_BASE: ${SQL_BASE:-hmdm}
      SQL_USER: ${SQL_USER:-hmdm}
      SQL_PASS: ${SQL_PASS:-topsecret}
      
      # Server Configuration
      BASE_DOMAIN: ${BASE_DOMAIN:-localhost}
      PROTOCOL: ${PROTOCOL:-https}
      
      # Admin Configuration
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
      
      # SSL Configuration
      FORCE_RECONFIGURE: ${FORCE_RECONFIGURE:-false}
      
      # Optional: Behind reverse proxy
      BEHIND_REVERSE_PROXY: ${BEHIND_REVERSE_PROXY:-false}
      
      # Optional: Custom ports
      HTTP_PORT: ${HTTP_PORT:-8080}
      HTTPS_PORT: ${HTTPS_PORT:-8443}
      
      # Optional: Push notification configuration
      PUSH_OPTIONS: ${PUSH_OPTIONS:-}
      
      # Optional: File upload size limit (in MB)
      FILE_UPLOAD_SIZE_LIMIT: ${FILE_UPLOAD_SIZE_LIMIT:-100}
      
      # Optional: Session timeout (in minutes)
      SESSION_TIMEOUT: ${SESSION_TIMEOUT:-30}
    volumes:
      # SSL certificates (Let's Encrypt)
      - letsencrypt_data:/etc/letsencrypt
      
      # Headwind MDM work directory
      - hmdm_work:/usr/local/tomcat/work
      
      # Configuration files
      - hmdm_config:/opt/hmdm/conf
      
      # Application files and uploads
      - hmdm_files:/opt/hmdm/files
      
      # Logs
      - hmdm_logs:/usr/local/tomcat/logs
    networks:
      - hmdm-network
    ports:
      - "${HTTP_PORT:-8080}:8080"
      - "${HTTPS_PORT:-8443}:8443"
      - "31000:31000"  # Push notification port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/hmdm/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL certificate management (optional)
  certbot:
    image: certbot/certbot:latest
    container_name: hmdm-certbot
    profiles:
      - ssl
    volumes:
      - letsencrypt_data:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: >
      sh -c "
        if [ ! -f /etc/letsencrypt/live/${BASE_DOMAIN}/fullchain.pem ]; then
          certbot certonly --webroot --webroot-path=/var/www/certbot 
          --email ${ADMIN_EMAIL} --agree-tos --no-eff-email 
          -d ${BASE_DOMAIN}
        fi
      "
    depends_on:
      - nginx

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: hmdm-nginx
    profiles:
      - ssl
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt_data:/etc/letsencrypt:ro
      - certbot_www:/var/www/certbot:ro
    networks:
      - hmdm-network
    depends_on:
      - hmdm

volumes:
  postgres_data:
    driver: local
  letsencrypt_data:
    driver: local
  certbot_www:
    driver: local
  hmdm_work:
    driver: local
  hmdm_config:
    driver: local
  hmdm_files:
    driver: local
  hmdm_logs:
    driver: local

networks:
  hmdm-network:
    driver: bridge

